{"version":3,"sources":["C:/Users/yprot/dev/ng-selector-docs/src/$_lazy_route_resource lazy","C:/Users/yprot/dev/ng-selector-docs/src/app/app.component.ts","C:/Users/yprot/dev/ng-selector-docs/src/app/app.module.ts","C:/Users/yprot/dev/ng-selector-docs/src/environments/environment.ts","C:/Users/yprot/dev/ng-selector-docs/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yF;;;;;;;;;;;;;;;;ACV0C;AA8B1C;IA5BA;QA6BE,aAAQ,GAAG,cAAc,CAAC;QAC1B,sBAAiB,GAAG,IAAI,KAAK,EAAU,CAAC;QAExC,WAAM,GAAG;YACP,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE;YAC/B,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE;YAChC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE;YAC/B,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE;SAChC,CAAC;IACJ,CAAC;IAVY,YAAY;QA5BxB,gEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,QAAQ,EAAE,6nBAwBT;SACF,CAAC;OACW,YAAY,CAUxB;IAAD,mBAAC;CAAA;AAVwB;;;;;;;;;;;;;;;;;;;;;;AC9BiC;AACjB;AACI;AAEE;AAGA;AAe/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,2DAAW;gBACX,6DAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;ACtBtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,qEAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/yprot/dev/ng-selector-docs/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <nav class=\"navbar navbar-toggleable-md navbar-inverse bg-inverse fixed-top\">\n    <a class=\"navbar-brand\" href=\"https://github.com/Taranys/ng-selector\">Github</a>\n  </nav>\n\n  <div class=\"container\">\n\n    <div class=\"starter-template\">\n      <h2>Simple example</h2>\n      <ng-selector\n        [(ngModel)]=\"selected\"\n        [options]=\"values\">\n      </ng-selector>\n\n      <h2>With plugins</h2>\n      <ng-selector\n        [(ngModel)]=\"multipleSelection\"\n        [options]=\"values\"\n        [plugins]=\"['remove_button']\"\n        multiple=\"true\">\n      </ng-selector>\n    </div>\n\n  </div>\n  `\n})\nexport class AppComponent {\n  selected = 'Second value';\n  multipleSelection = new Array<number>();\n\n  values = [\n    { id: 1, label: 'First value' },\n    { id: 2, label: 'Second value' },\n    { id: 3, label: 'Another one' },\n    { id: 42, label: 'Best value' },\n  ];\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/yprot/dev/ng-selector-docs/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgSelectorModule } from 'ng-selector';\n\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    NgSelectorModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/yprot/dev/ng-selector-docs/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/yprot/dev/ng-selector-docs/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/yprot/dev/ng-selector-docs/src/main.ts"],"sourceRoot":"webpack:///"}